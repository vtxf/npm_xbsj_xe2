export declare type CzmPointPrimitiveType = {
    show?: boolean;
    color?: [number, number, number, number];
    disableDepthTestDistance?: number;
    distanceDisplayCondition?: [number, number];
    outlineColor?: [number, number, number, number];
    outlineWidth?: number;
    pixelSize?: number;
    position?: [number, number, number];
    scaleByDistance?: [number, number, number, number];
    translucencyByDistance?: [number, number, number, number];
};
export declare type CzmLabelPrimitiveType = {
    fillColor?: [number, number, number, number];
    show?: boolean;
    position?: [number, number, number];
    pixelOffset?: [number, number];
    eyeOffset?: [number, number, number];
    heightReference?: 'NONE' | 'CLAMP_TO_GROUND' | 'RELATIVE_TO_GROUND';
    horizontalOrigin?: "CENTER" | "LEFT" | "RIGHT";
    verticalOrigin?: "CENTER" | "BOTTOM" | "BASELINE" | "TOP";
    scale?: number;
    translucencyByDistance?: [number, number, number, number];
    pixelOffsetScaleByDistance?: [number, number, number, number];
    distanceDisplayCondition?: [number, number];
    scaleByDistance?: [number, number, number, number];
    style?: "FILL" | "OUTLINE" | "FILL_AND_OUTLINE";
    backgroundPadding?: [number, number];
    backgroundColor?: [number, number, number, number];
    outlineColor?: [number, number, number, number];
    showBackground?: boolean;
    text?: string;
    font?: string;
    outlineWidth?: number;
};
export declare type CzmBillboardPrimitiveType = {
    show?: boolean;
    position?: [number, number, number];
    color?: [number, number, number, number];
    pixelOffset?: [number, number];
    eyeOffset?: [number, number, number];
    heightReference?: 'NONE' | 'CLAMP_TO_GROUND' | 'RELATIVE_TO_GROUND';
    horizontalOrigin?: "CENTER" | "LEFT" | "RIGHT";
    verticalOrigin?: "CENTER" | "BOTTOM" | "BASELINE" | "TOP";
    scale?: number;
    image?: string;
    rotation?: number;
    alignedAxis?: [number, number, number];
    width?: number;
    height?: number;
    scaleByDistance?: [number, number, number, number];
    translucencyByDistance?: [number, number, number, number];
    pixelOffsetScaleByDistance?: [number, number, number, number];
    sizeInMeters?: boolean;
    distanceDisplayCondition?: [number, number];
};
