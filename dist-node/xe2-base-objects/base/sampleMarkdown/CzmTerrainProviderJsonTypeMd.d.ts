export declare const CzmTerrainProviderJsonTypeMd = "\n### CzmTerrainProviderJsonType\n```javascript\ntype CzmTerrainProviderJsonType =\n    {\n        type: 'ArcGISTiledElevationTerrainProvider';\n        url: string\t//Resource | String | Promise.< Resource > | Promise.< String > The URL of the ArcGIS ImageServer service.\n        token?: string//String\toptionalThe authorization token to use to connect to the service.\n        ellipsoid?: [x: number, y: number, z: number] \t//Ellipsoid\toptionalThe ellipsoid.If the tilingScheme is specified, this parameter is ignored and the tiling scheme's ellipsoid is used instead. If neither parameter is specified, the WGS84 ellipsoid is used.\n    } |\n    {\n        type: 'CesiumTerrainProvider';\n        url: string; //\tResource | String | Promise.<Resource> | Promise.<String>\t\tThe URL of the Cesium terrain server.\n        requestVertexNormals?: boolean; //\tBoolean\tfalse\toptionalFlag that indicates if the client should request additional lighting information from the server, in the form of per vertex normals if available.\n        requestWaterMask?: boolean; //\tBoolean\tfalse\toptionalFlag that indicates if the client should request per tile water masks from the server, if available.\n        requestMetadata?: boolean; //\tBoolean\ttrue\toptionalFlag that indicates if the client should request per tile metadata from the server, if available.\n        ellipsoid?: [x: number, y: number, z: number]; //\tEllipsoid\t\toptionalThe ellipsoid. If not specified, the WGS84 ellipsoid is used.\n        credit?: string; //\tCredit | String\t\toptionalA credit for the data source, which is displayed on the canvas.\n    } |\n    {\n        type: 'CustomHeightmapTerrainProvider';\n        callback: string,\t//CustomHeightmapTerrainProvider.GeometryCallback\tThe callback function for requesting tile geometry.\n        width: number,\t//Number\tThe number of columns per heightmap tile.\n        height: number\t//Number\tThe number of rows per heightmap tile.\n        tilingScheme?: CzmTilingSchemaJsonType; //\tTilingScheme\t<optional> The tiling scheme specifying how the ellipsoidal surface is broken into tiles. If this parameter is not provided, a WebMercatorTilingScheme is used.\n        ellipsoid?: [x: number, y: number, z: number]; \t//Ellipsoid\toptionalThe ellipsoid. If the tilingScheme is specified, this parameter is ignored and the tiling scheme's ellipsoid is used instead. If neither parameter is specified, the WGS84 ellipsoid is used.\n        credit?: string\t//Credit | String\toptionalA credit for the data source, which is displayed on the canvas.\n    } |\n    {\n        type: 'EllipsoidTerrainProvider';\n        tilingScheme?: CzmTilingSchemaJsonType; //\tTilingScheme\toptionalThe tiling scheme specifying how the ellipsoidal surface is broken into tiles. If this parameter is not provided, a GeographicTilingScheme is used.\n        ellipsoid?: [x: number, y: number, z: number]; //\tEllipsoid\toptionalThe ellipsoid. If the tilingScheme is specified, this parameter is ignored and the tiling scheme's ellipsoid is used instead. If neither parameter is specified, the WGS84 ellipsoid is used.\n    } |\n    {\n        type: 'GoogleEarthEnterpriseTerrainProvider';\n        url: string; //\tResource | String\tThe url of the Google Earth Enterprise server hosting the imagery.\n        metadata: string; // metadata  \u5DF2\u89E3\u51B3 //\tGoogleEarthEnterpriseMetadata\tA metadata object that can be used to share metadata requests with a GoogleEarthEnterpriseImageryProvider.\n        ellipsoid?: [x: number, y: number, z: number]; //\tEllipsoid\toptionalThe ellipsoid. If not specified, the WGS84 ellipsoid is used.\n        credit?: string; //\tCredit | String\toptionalA credit for the data source, which is displayed on the canvas.\n    } |\n    {\n        type: 'VRTheWorldTerrainProvider';\n        url: string,\t//Resource | String\t\tThe URL of the VR-TheWorld TileMap.\n        ellipsoid?: [x: number, y: number, z: number]; //\tEllipsoid\toptionalThe ellipsoid. If not specified, the WGS84 ellipsoid is used.\n        credit?: string; //\tCredit | String\toptionalA credit for the data source, which is displayed on the canvas.\n    };\n\n```\n";
