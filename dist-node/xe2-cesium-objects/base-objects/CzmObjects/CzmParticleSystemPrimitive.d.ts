import { CzmParticleEmitterJsonType, ESSceneObject, Player, PositionEditing } from "xbsj-xe2/dist-node/xe2-base-objects";
import { Listener, PartialWithUndefinedReactivePropsToNativeProps, ReactivePropsToNativePropsAndChanged } from "xbsj-xe2/dist-node/xe2-base-utils";
import { SceneObjectKey } from "xbsj-xe2/dist-node/xe2-utils";
export declare class CzmParticleSystemPrimitive extends ESSceneObject {
    static readonly type: string;
    get typeName(): string;
    get defaultProps(): {
        execOnceFuncStr: string | undefined;
        updateFuncStr: string | undefined;
        toDestroyFuncStr: string | undefined;
        name: string;
        ref: string | undefined;
        devTags: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<string[] | undefined>;
        extras: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<import("xbsj-xe2/dist-node/xe2-base-utils").JsonValue>;
        emitter: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<CzmParticleEmitterJsonType | undefined>;
        bursts: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[time?: number | undefined, minimum?: number | undefined, maximum?: number | undefined][] | undefined>;
        position: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number] | undefined>;
        translation: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number] | undefined>;
        rotation: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number] | undefined>;
        positionEditing: boolean;
        image: string | undefined;
        imageSize: [number, number] | undefined;
        minimumImageSize: [number, number] | undefined;
        maximumImageSize: [number, number] | undefined;
        show: boolean | undefined;
        updateCallback: string | undefined;
        emissionRate: number | undefined;
        loop: boolean | undefined;
        scale: number | undefined;
        startScale: number | undefined;
        endScale: number | undefined;
        color: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        startColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        endColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        sizeInMeters: boolean | undefined;
        speed: number | undefined;
        minimumSpeed: number | undefined;
        maximumSpeed: number | undefined;
        lifetime: number | undefined;
        particleLife: number | undefined;
        minimumParticleLife: number | undefined;
        maximumParticleLife: number | undefined;
        mass: number | undefined;
        minimumMass: number | undefined;
        maximumMass: number | undefined;
        playingLoop: boolean | undefined;
        currentTime: number | undefined;
        duration: number | undefined;
        playingSpeed: number | undefined;
        playing: boolean | undefined;
    };
    get json(): JsonType;
    set json(value: JsonType);
    private _flyToEvent;
    get flyToEvent(): Listener<[number | undefined]>;
    flyTo(duration?: number): void;
    private _player;
    get player(): Player;
    get ratio(): number;
    set ratio(value: number);
    get ratioChanged(): Listener<[number, number]>;
    private _sPositionEditing;
    get sPositionEditing(): PositionEditing;
    constructor(id?: SceneObjectKey);
    static defaults: {
        playingLoop: boolean;
        currentTime: number;
        playerCurrentTime: number;
        duration: number;
        playingSpeed: number;
        playing: boolean;
        ratio: number;
        particleLife: number;
        endScale: number;
        imageSize: [number, number];
        image: string;
        emitter: CzmParticleEmitterJsonType;
        viewerTagsEnums: [string, string][];
    };
    getProperties(language?: string): import("xbsj-xe2/dist-node/xe2-base-objects").Property[];
}
export declare namespace CzmParticleSystemPrimitive {
    const createDefaultProps: () => {
        execOnceFuncStr: string | undefined;
        updateFuncStr: string | undefined;
        toDestroyFuncStr: string | undefined;
        name: string;
        ref: string | undefined;
        devTags: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<string[] | undefined>;
        extras: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<import("xbsj-xe2/dist-node/xe2-base-utils").JsonValue>;
        emitter: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<CzmParticleEmitterJsonType | undefined>;
        bursts: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[time?: number | undefined, minimum?: number | undefined, maximum?: number | undefined][] | undefined>;
        position: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number] | undefined>;
        translation: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number] | undefined>;
        rotation: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number] | undefined>;
        positionEditing: boolean;
        image: string | undefined;
        imageSize: [number, number] | undefined;
        minimumImageSize: [number, number] | undefined;
        maximumImageSize: [number, number] | undefined;
        show: boolean | undefined;
        updateCallback: string | undefined;
        emissionRate: number | undefined;
        loop: boolean | undefined;
        scale: number | undefined;
        startScale: number | undefined;
        endScale: number | undefined;
        color: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        startColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        endColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        sizeInMeters: boolean | undefined;
        speed: number | undefined;
        minimumSpeed: number | undefined;
        maximumSpeed: number | undefined;
        lifetime: number | undefined;
        particleLife: number | undefined;
        minimumParticleLife: number | undefined;
        maximumParticleLife: number | undefined;
        mass: number | undefined;
        minimumMass: number | undefined;
        maximumMass: number | undefined;
        playingLoop: boolean | undefined;
        currentTime: number | undefined;
        duration: number | undefined;
        playingSpeed: number | undefined;
        playing: boolean | undefined;
    };
}
export interface CzmParticleSystemPrimitive extends ReactivePropsToNativePropsAndChanged<ReturnType<typeof CzmParticleSystemPrimitive.createDefaultProps>> {
}
declare type JsonType = PartialWithUndefinedReactivePropsToNativeProps<ReturnType<typeof CzmParticleSystemPrimitive.createDefaultProps> & {
    type: string;
}>;
export {};
