import { GeoCustomDivPoi } from "xbsj-xe2/dist-node/xe2-base-objects";
import { ESSceneObject, PickedInfo, Viewer } from "xbsj-xe2/dist-node/xe2-base-objects";
import { Destroyable, Event, Listener, PartialWithUndefinedReactivePropsToNativeProps, ReactivePropsToNativePropsAndChanged } from "xbsj-xe2/dist-node/xe2-base-utils";
import { SceneObjectKey } from "xbsj-xe2/dist-node/xe2-utils";
declare class MyDivBase extends Destroyable {
    protected _container: HTMLDivElement;
    constructor(_container: HTMLDivElement, geoCustomDivPoi: GeoCustomDivPoi<MyDivBase>, viewer: Viewer);
    getHeight(): number;
}
export declare class OlLabelWithLine extends ESSceneObject {
    static readonly type: string;
    get typeName(): string;
    get defaultProps(): {
        show: boolean | undefined;
        positions: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number][] | undefined>;
        editing: boolean | undefined;
        pointEditing: boolean | undefined;
        length: number | undefined;
        initialAngle: number | undefined;
        allowPicking: boolean | undefined;
        zIndex: number | undefined;
        color: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        lineCap: "butt" | "round" | "square" | undefined;
        lineJoin: "round" | "bevel" | "miter" | undefined;
        lineDash: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<number[] | undefined>;
        lineDashOffset: number | undefined;
        miterLimit: number | undefined;
        width: number | undefined;
        divWidth: number | undefined;
        borderWidth: number | undefined;
        borderColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        borderStyle: "hidden" | "none" | "solid" | "dotted" | "dashed" | "double" | "groove" | "ridge" | "inset" | "outset" | undefined;
        background: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        borderRadius: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        textAlign: "center" | "left" | "right" | "justify" | "inherit" | undefined;
        fontStyle: "normal" | "inherit" | "italic" | "oblique" | undefined;
        fontSize: number | undefined;
        fontWeight: number | undefined;
        fontFamily: string | undefined;
        textDecoration: "none" | "blink" | "inherit" | "underline" | "overline" | "line-through" | undefined;
        fontColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        letterSpacing: number | undefined;
        lineHeight: number | undefined;
        padding: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        textStrokeColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        textStrokeWidth: number | undefined;
        textShadowOffset: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number] | undefined>;
        textShadowColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        text: string | undefined;
        opacity: number | undefined;
        originRatioAndOffset: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[leftRatio: number, topRatio: number, leftOffset: number, topOffset: number] | undefined>;
        execOnceFuncStr: string | undefined;
        updateFuncStr: string | undefined;
        toDestroyFuncStr: string | undefined;
        name: string;
        ref: string | undefined;
        devTags: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<string[] | undefined>;
        extras: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<import("xbsj-xe2/dist-node/xe2-base-utils").JsonValue>;
    };
    get json(): JsonType;
    set json(value: JsonType);
    private _pickedEvent;
    get pickedEvent(): Event<[PickedInfo]>;
    private _flyToEvent;
    get flyToEvent(): Listener<[number | undefined]>;
    flyTo(duration?: number): void;
    private _position;
    get position(): [number, number] | undefined;
    set position(position: [number, number] | undefined);
    get positionChanged(): Listener<[[number, number] | undefined, [number, number] | undefined]>;
    static fontStyleTypeEnums: [string, string][];
    static textAlignTypeEnums: [string, string][];
    static textDecorationTypeEnums: [string, string][];
    static lineCapTypeEnums: [string, string][];
    static lineJoinTypeEnums: [string, string][];
    static borderStyleTypeEnums: [string, string][];
    static description: {
        fontStyleType: string;
        textAlignType: string;
        textDecorationType: string;
        color: string;
        lineCap: string;
        lineJoin: string;
        lineDash: string;
        lineDashOffset: string;
        miterLimit: string;
        width: string;
        borderStyle: string;
    };
    static defaultValue: {
        textShadowColor: [number, number, number, number];
        textShadowOffset: [number, number];
        strokeColor: [number, number, number, number];
    };
    private _customDivPoi;
    get customDivPoi(): GeoCustomDivPoi<MyDivBase>;
    constructor(id?: SceneObjectKey);
    getHeight(): number;
    getProperties(language?: string): import("xbsj-xe2/dist-node/xe2-base-objects").Property[];
}
export declare namespace OlLabelWithLine {
    const createDefaultProps: () => {
        show: boolean | undefined;
        positions: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number][] | undefined>;
        editing: boolean | undefined;
        pointEditing: boolean | undefined;
        length: number | undefined;
        initialAngle: number | undefined;
        allowPicking: boolean | undefined;
        zIndex: number | undefined;
        color: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        lineCap: "butt" | "round" | "square" | undefined;
        lineJoin: "round" | "bevel" | "miter" | undefined;
        lineDash: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<number[] | undefined>;
        lineDashOffset: number | undefined;
        miterLimit: number | undefined;
        width: number | undefined;
        divWidth: number | undefined;
        borderWidth: number | undefined;
        borderColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        borderStyle: "hidden" | "none" | "solid" | "dotted" | "dashed" | "double" | "groove" | "ridge" | "inset" | "outset" | undefined;
        background: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        borderRadius: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        textAlign: "center" | "left" | "right" | "justify" | "inherit" | undefined;
        fontStyle: "normal" | "inherit" | "italic" | "oblique" | undefined;
        fontSize: number | undefined;
        fontWeight: number | undefined;
        fontFamily: string | undefined;
        textDecoration: "none" | "blink" | "inherit" | "underline" | "overline" | "line-through" | undefined;
        fontColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        letterSpacing: number | undefined;
        lineHeight: number | undefined;
        padding: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        textStrokeColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        textStrokeWidth: number | undefined;
        textShadowOffset: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number] | undefined>;
        textShadowColor: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[number, number, number, number] | undefined>;
        text: string | undefined;
        opacity: number | undefined;
        originRatioAndOffset: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<[leftRatio: number, topRatio: number, leftOffset: number, topOffset: number] | undefined>;
        execOnceFuncStr: string | undefined;
        updateFuncStr: string | undefined;
        toDestroyFuncStr: string | undefined;
        name: string;
        ref: string | undefined;
        devTags: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<string[] | undefined>;
        extras: import("xbsj-xe2/dist-node/xe2-base-utils").ReactiveVariable<import("xbsj-xe2/dist-node/xe2-base-utils").JsonValue>;
    };
}
export interface OlLabelWithLine extends ReactivePropsToNativePropsAndChanged<ReturnType<typeof OlLabelWithLine.createDefaultProps>> {
}
declare type JsonType = PartialWithUndefinedReactivePropsToNativeProps<ReturnType<typeof OlLabelWithLine.createDefaultProps> & {
    type: string;
}>;
export {};
